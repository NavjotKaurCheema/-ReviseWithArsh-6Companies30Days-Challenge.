from math import gcd
class Solution:
    def minimizeSet(self,divisor1,divisor2,uniqueCnt1,uniqueCnt2):
        d1,d2,cnt1,cnt2=divisor1,divisor2,uniqueCnt1,uniqueCnt2
        l,r,ans=1,10**15,10**15
        g=gcd(d1,d2)
        lcm=(d1*d2)//g

        while l<=r:
            mid=(l+r)//2
            if d1==d2:
                cnt=mid-(mid//d1)
                if cnt>=cnt1+cnt2:
                    ans=mid
                    r=mid-1
                else:
                    l=mid+1
            else:
                common=mid//lcm
                c1=(mid//d1)-common
                c2=(mid//d2)-common
                z1=cnt1
                z2=cnt2
                avail=mid-(c1+c2+common)
                z1-=min(z1,c2)
                z2-=min(z2,c1)
                
                if z1 + z2 <= avail:
                    ans=mid
                    r=mid-1
                else:
                    l=mid+1
        return ans
sol=Solution()
divisor1 = 2 
divisor2 = 7
uniqueCnt1 = 1
uniqueCnt2 = 3
result=sol.minimizeSet(divisor1,divisor2,uniqueCnt1,uniqueCnt2)
print(result)




